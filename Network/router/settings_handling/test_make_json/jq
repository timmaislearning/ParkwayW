#https://www.howtogeek.com/529219/how-to-parse-json-files-on-the-linux-command-line-with-jq/

# https://unix.stackexchange.com/questions/739691/jq-select-an-attribute-based-on-a-key-that-starts-with-or-contains-a-string
jq '."service"."dhcp-server" | to_entries[] | select(.key  | startswith("shared-network-name ") | split(" "))' config.boot.json 
# curl -u $USERNAME:$PASSWORD https://$IP:$PORT/v2/_catalog | jq -r '.repositories'

jq '."service"."dhcp-server" | to_entries[] | select(.key  | startswith("shared-network-name ") )' config.boot.json
jq '."service"."dhcp-server" | to_entries[] | select(.key  | startswith("shared-network-name ") )[]' config.boot.json | jq "."
jq '."service"."dhcp-server" | to_entries[] | select(.key  | startswith("shared-network-name ") )[]' config.boot.json | jq '. | split(" ")'
jq '."service"."dhcp-server" | to_entries[] | select(.key  | startswith("shared-network-name ") )[].key' config.boot.json


https://stackoverflow.com/questions/37540717/flatten-nested-json-using-jq
[paths(values) as $path | {"key": $path | join("."), "value": getpath($path)}] | from_entries


https://gist.github.com/olih/f7437fb6962fb3ee9fe95bda8d2c8fa4
.input_chunks | to_entries | map(select(.key | startswith("emitter_for_detect")) | select(.value.status | .mem_size != "0b")) | from_entries
jq '."service"."dhcp-server" | to_entries | map(select(.key | startswith("shared-network-name ")) | select(.value)) | from_entries' config.boot.json

https://kamicut.cc/2014/11/19/using-jq-nested-objects.html
to_entries  | map({country: .key, gni: .value.gni, gini: .value.gini, score: .value.score, rank: .value.rank})



jq '."service"."dhcp-server" | to_entries | map(select(.key | startswith("shared-network-name ")) | select(.value)) | from_entries' config.boot.json



jq '."service"."dhcp-server" | to_entries | map(select(.key | startswith("shared-network-name ")) | select(.value)) | map({network: .key, .value.subnet, .value.subnet.default-router, .value.subnet.lease, .value.subnet.start, .value.subnet.start.stop }) | from_entries' config.boot.json
jq '."service"."dhcp-server" | to_entries | map(select(.key | startswith("shared-network-name ")) | select(.value)) | map({network: .key, ."value"."subnet", ."value"."subnet"."default-router", ."value"."subnet"."lease", ."value"."subnet"."start", ."value"."subnet"."start"."stop" }) | from_entries' config.boot.json
jq '."service"."dhcp-server" | to_entries | map(select(.key | startswith("shared-network-name ")) | select(.value)) | map({network: .key, ."value"."subnet", .value."subnet"."default-router", .value."subnet"."lease", .value."subnet"."start", .value."subnet"."start"."stop" }) | from_entries' config.boot.json

jq '."service"."dhcp-server" | to_entries | map({network: select(.key | startswith("shared-network-name ")), ."value"."subnet", ."value"."subnet"."default-router", ."value"."subnet"."lease", ."value"."subnet"."start", ."value"."subnet"."start"."stop" }) | from_entries' config.boot.json
            "shared-network-name Security-V102": {
                "authoritative": "disable",
                "subnet 192.168.102.0/26": {
                    "default-router": "192.168.102.1",
                    "lease": "86400",
                    "start 192.168.102.1": {
                        "stop": "192.168.102.62"
                    }
                }
            },
            "shared-network-name eth3_devcom": {
                "authoritative": "disable",
                "subnet 192.168.199.0/28": {
                    "default-router": "192.168.199.1",
                    "dns-server": "1.0.0.3",
                    "lease": "86400",
                    "start 192.168.199.2": {
                        "stop": "192.168.199.14"
                    }
                }
            },
            "static-arp": "disable",
            "use-dnsmasq": "disable"
